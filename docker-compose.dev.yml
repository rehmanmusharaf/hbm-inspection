version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: car-inspection-db-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: car_inspection_dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
    networks:
      - car-inspection-dev-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: car-inspection-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - car-inspection-dev-network

  # Backend API (Development mode with volume mounting)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: car-inspection-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/car_inspection_dev?authSource=admin
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRE: 7d
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      EMAIL_HOST: smtp.gmail.com
      EMAIL_PORT: 587
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: noreply@carinspection.dev
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - car-inspection-dev-network

volumes:
  mongodb_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  car-inspection-dev-network:
    driver: bridge